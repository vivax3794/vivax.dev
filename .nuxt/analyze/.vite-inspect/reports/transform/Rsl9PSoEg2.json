{
  "resolvedId": "/home/vivax/coding/vivax.dev/node_modules/quasar/src/plugins/Dark.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import defineReactivePlugin from '../utils/private/define-reactive-plugin.js'\nimport { isRuntimeSsrPreHydration } from './Platform.js'\n\nconst Plugin = defineReactivePlugin({\n  isActive: false,\n  mode: false\n}, {\n  __media: void 0,\n\n  set (val) {\n    if (__QUASAR_SSR_SERVER__) { return }\n\n    Plugin.mode = val\n\n    if (val === 'auto') {\n      if (Plugin.__media === void 0) {\n        Plugin.__media = window.matchMedia('(prefers-color-scheme: dark)')\n        Plugin.__updateMedia = () => { Plugin.set('auto') }\n        Plugin.__media.addListener(Plugin.__updateMedia)\n      }\n\n      val = Plugin.__media.matches\n    }\n    else if (Plugin.__media !== void 0) {\n      Plugin.__media.removeListener(Plugin.__updateMedia)\n      Plugin.__media = void 0\n    }\n\n    Plugin.isActive = val === true\n\n    document.body.classList.remove(`body--${ val === true ? 'light' : 'dark' }`)\n    document.body.classList.add(`body--${ val === true ? 'dark' : 'light' }`)\n  },\n\n  toggle () {\n    if (__QUASAR_SSR_SERVER__ !== true) {\n      Plugin.set(Plugin.isActive === false)\n    }\n  },\n\n  install ({ $q, onSSRHydrated, ssrContext }) {\n    const { dark } = $q.config\n\n    if (__QUASAR_SSR_SERVER__) {\n      this.isActive = dark === true\n\n      $q.dark = {\n        isActive: false,\n        mode: false,\n        set: val => {\n          ssrContext._meta.bodyClasses = ssrContext._meta.bodyClasses\n            .replace(' body--light', '')\n            .replace(' body--dark', '') + ` body--${ val === true ? 'dark' : 'light' }`\n\n          $q.dark.isActive = val === true\n          $q.dark.mode = val\n        },\n        toggle: () => {\n          $q.dark.set($q.dark.isActive === false)\n        }\n      }\n\n      $q.dark.set(dark)\n      return\n    }\n\n    $q.dark = this\n\n    if (this.__installed === true && dark === void 0) {\n      return\n    }\n\n    this.isActive = dark === true\n\n    const initialVal = dark !== void 0 ? dark : false\n\n    if (isRuntimeSsrPreHydration.value === true) {\n      const ssrSet = val => {\n        this.__fromSSR = val\n      }\n\n      const originalSet = this.set\n\n      this.set = ssrSet\n      ssrSet(initialVal)\n\n      onSSRHydrated.push(() => {\n        this.set = originalSet\n        this.set(this.__fromSSR)\n      })\n    }\n    else {\n      this.set(initialVal)\n    }\n  }\n})\n\nexport default Plugin\n",
      "start": 1703982896687,
      "end": 1703982896742,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982896742,
      "end": 1703982896742,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982896742,
      "end": 1703982896742,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982896742,
      "end": 1703982896742,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703982896742,
      "end": 1703982896742,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703982896742,
      "end": 1703982896742,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703982896742,
      "end": 1703982896742,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703982896742,
      "end": 1703982896742,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703982896742,
      "end": 1703982896742,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703982896742,
      "end": 1703982896742,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703982896742,
      "end": 1703982896742,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896742,
      "end": 1703982896742,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982896743,
      "end": 1703982896743,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703982896743,
      "end": 1703982896743,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703982896743,
      "end": 1703982896743,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896743,
      "end": 1703982896743,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703982896743,
      "end": 1703982896743,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import defineReactivePlugin from \"../utils/private/define-reactive-plugin.js\";\nimport { isRuntimeSsrPreHydration } from \"./Platform.js\";\nconst Plugin = defineReactivePlugin({\n  isActive: false,\n  mode: false\n}, {\n  __media: void 0,\n  set(val) {\n    if (false) {\n      return;\n    }\n    Plugin.mode = val;\n    if (val === \"auto\") {\n      if (Plugin.__media === void 0) {\n        Plugin.__media = window.matchMedia(\"(prefers-color-scheme: dark)\");\n        Plugin.__updateMedia = () => {\n          Plugin.set(\"auto\");\n        };\n        Plugin.__media.addListener(Plugin.__updateMedia);\n      }\n      val = Plugin.__media.matches;\n    } else if (Plugin.__media !== void 0) {\n      Plugin.__media.removeListener(Plugin.__updateMedia);\n      Plugin.__media = void 0;\n    }\n    Plugin.isActive = val === true;\n    document.body.classList.remove(`body--${val === true ? \"light\" : \"dark\"}`);\n    document.body.classList.add(`body--${val === true ? \"dark\" : \"light\"}`);\n  },\n  toggle() {\n    if (true) {\n      Plugin.set(Plugin.isActive === false);\n    }\n  },\n  install({ $q, onSSRHydrated, ssrContext }) {\n    const { dark } = $q.config;\n    if (false) {\n      this.isActive = dark === true;\n      $q.dark = {\n        isActive: false,\n        mode: false,\n        set: (val) => {\n          ssrContext._meta.bodyClasses = ssrContext._meta.bodyClasses.replace(\" body--light\", \"\").replace(\" body--dark\", \"\") + ` body--${val === true ? \"dark\" : \"light\"}`;\n          $q.dark.isActive = val === true;\n          $q.dark.mode = val;\n        },\n        toggle: () => {\n          $q.dark.set($q.dark.isActive === false);\n        }\n      };\n      $q.dark.set(dark);\n      return;\n    }\n    $q.dark = this;\n    if (this.__installed === true && dark === void 0) {\n      return;\n    }\n    this.isActive = dark === true;\n    const initialVal = dark !== void 0 ? dark : false;\n    if (isRuntimeSsrPreHydration.value === true) {\n      const ssrSet = (val) => {\n        this.__fromSSR = val;\n      };\n      const originalSet = this.set;\n      this.set = ssrSet;\n      ssrSet(initialVal);\n      onSSRHydrated.push(() => {\n        this.set = originalSet;\n        this.set(this.__fromSSR);\n      });\n    } else {\n      this.set(initialVal);\n    }\n  }\n});\nexport default Plugin;\n",
      "start": 1703982896743,
      "end": 1703982896747,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1703982896747,
      "end": 1703982896747,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703982896747,
      "end": 1703982896747,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703982896747,
      "end": 1703982896747,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703982896747,
      "end": 1703982896747,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703982896749,
      "end": 1703982896749,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703982896749,
      "end": 1703982896749,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703982896750,
      "end": 1703982896750,
      "order": "normal"
    }
  ]
}
