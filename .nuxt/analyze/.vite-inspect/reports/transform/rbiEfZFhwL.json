{
  "resolvedId": "/home/vivax/coding/vivax.dev/node_modules/quasar/src/composables/private/use-anchor.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, watch, onMounted, onBeforeUnmount, nextTick, getCurrentInstance } from 'vue'\n\nimport { clearSelection } from '../../utils/private/selection.js'\nimport { addEvt, cleanEvt, prevent } from '../../utils/event.js'\nimport { isKeyCode } from '../../utils/private/key-composition.js'\n\nexport const useAnchorProps = {\n  target: {\n    default: true\n  },\n  noParentEvent: Boolean,\n  contextMenu: Boolean\n}\n\nexport default function ({\n  showing,\n  avoidEmit, // required for QPopupProxy (true)\n  configureAnchorEl // optional\n}) {\n  const { props, proxy, emit } = getCurrentInstance()\n\n  const anchorEl = ref(null)\n\n  let touchTimer = null\n\n  function canShow (evt) {\n    // abort with no parent configured or on multi-touch\n    return anchorEl.value === null\n      ? false\n      : (evt === void 0 || evt.touches === void 0 || evt.touches.length <= 1)\n  }\n\n  const anchorEvents = {}\n\n  if (configureAnchorEl === void 0) {\n    // default configureAnchorEl is designed for\n    // QMenu & QPopupProxy (which is why it's handled here)\n\n    Object.assign(anchorEvents, {\n      hide (evt) {\n        proxy.hide(evt)\n      },\n\n      toggle (evt) {\n        proxy.toggle(evt)\n        evt.qAnchorHandled = true\n      },\n\n      toggleKey (evt) {\n        isKeyCode(evt, 13) === true && anchorEvents.toggle(evt)\n      },\n\n      contextClick (evt) {\n        proxy.hide(evt)\n        prevent(evt)\n        nextTick(() => {\n          proxy.show(evt)\n          evt.qAnchorHandled = true\n        })\n      },\n\n      prevent,\n\n      mobileTouch (evt) {\n        anchorEvents.mobileCleanup(evt)\n\n        if (canShow(evt) !== true) {\n          return\n        }\n\n        proxy.hide(evt)\n        anchorEl.value.classList.add('non-selectable')\n\n        const target = evt.target\n        addEvt(anchorEvents, 'anchor', [\n          [ target, 'touchmove', 'mobileCleanup', 'passive' ],\n          [ target, 'touchend', 'mobileCleanup', 'passive' ],\n          [ target, 'touchcancel', 'mobileCleanup', 'passive' ],\n          [ anchorEl.value, 'contextmenu', 'prevent', 'notPassive' ]\n        ])\n\n        touchTimer = setTimeout(() => {\n          touchTimer = null\n          proxy.show(evt)\n          evt.qAnchorHandled = true\n        }, 300)\n      },\n\n      mobileCleanup (evt) {\n        anchorEl.value.classList.remove('non-selectable')\n\n        if (touchTimer !== null) {\n          clearTimeout(touchTimer)\n          touchTimer = null\n        }\n\n        if (showing.value === true && evt !== void 0) {\n          clearSelection()\n        }\n      }\n    })\n\n    configureAnchorEl = function (context = props.contextMenu) {\n      if (props.noParentEvent === true || anchorEl.value === null) { return }\n\n      let evts\n\n      if (context === true) {\n        if (proxy.$q.platform.is.mobile === true) {\n          evts = [\n            [ anchorEl.value, 'touchstart', 'mobileTouch', 'passive' ]\n          ]\n        }\n        else {\n          evts = [\n            [ anchorEl.value, 'mousedown', 'hide', 'passive' ],\n            [ anchorEl.value, 'contextmenu', 'contextClick', 'notPassive' ]\n          ]\n        }\n      }\n      else {\n        evts = [\n          [ anchorEl.value, 'click', 'toggle', 'passive' ],\n          [ anchorEl.value, 'keyup', 'toggleKey', 'passive' ]\n        ]\n      }\n\n      addEvt(anchorEvents, 'anchor', evts)\n    }\n  }\n\n  function unconfigureAnchorEl () {\n    cleanEvt(anchorEvents, 'anchor')\n  }\n\n  function setAnchorEl (el) {\n    anchorEl.value = el\n    while (anchorEl.value.classList.contains('q-anchor--skip')) {\n      anchorEl.value = anchorEl.value.parentNode\n    }\n    configureAnchorEl()\n  }\n\n  function pickAnchorEl () {\n    if (props.target === false || props.target === '' || proxy.$el.parentNode === null) {\n      anchorEl.value = null\n    }\n    else if (props.target === true) {\n      setAnchorEl(proxy.$el.parentNode)\n    }\n    else {\n      let el = props.target\n\n      if (typeof props.target === 'string') {\n        try {\n          el = document.querySelector(props.target)\n        }\n        catch (err) {\n          el = void 0\n        }\n      }\n\n      if (el !== void 0 && el !== null) {\n        anchorEl.value = el.$el || el\n        configureAnchorEl()\n      }\n      else {\n        anchorEl.value = null\n        console.error(`Anchor: target \"${ props.target }\" not found`)\n      }\n    }\n  }\n\n  watch(() => props.contextMenu, val => {\n    if (anchorEl.value !== null) {\n      unconfigureAnchorEl()\n      configureAnchorEl(val)\n    }\n  })\n\n  watch(() => props.target, () => {\n    if (anchorEl.value !== null) {\n      unconfigureAnchorEl()\n    }\n\n    pickAnchorEl()\n  })\n\n  watch(() => props.noParentEvent, val => {\n    if (anchorEl.value !== null) {\n      if (val === true) {\n        unconfigureAnchorEl()\n      }\n      else {\n        configureAnchorEl()\n      }\n    }\n  })\n\n  onMounted(() => {\n    pickAnchorEl()\n\n    if (avoidEmit !== true && props.modelValue === true && anchorEl.value === null) {\n      emit('update:modelValue', false)\n    }\n  })\n\n  onBeforeUnmount(() => {\n    touchTimer !== null && clearTimeout(touchTimer)\n    unconfigureAnchorEl()\n  })\n\n  return {\n    anchorEl,\n    canShow,\n    anchorEvents\n  }\n}\n",
      "start": 1703982897325,
      "end": 1703982897384,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703982897384,
      "end": 1703982897384,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703982897384,
      "end": 1703982897385,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703982897385,
      "end": 1703982897385,
      "order": "normal"
    }
  ]
}
