{
  "resolvedId": "/home/vivax/coding/vivax.dev/node_modules/quasar/src/components/pull-to-refresh/QPullToRefresh.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { h, ref, computed, watch, onMounted, onBeforeUnmount, getCurrentInstance } from 'vue'\n\nimport QIcon from '../icon/QIcon.js'\nimport QSpinner from '../spinner/QSpinner.js'\nimport TouchPan from '../../directives/TouchPan.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { getScrollTarget, getVerticalScrollPosition } from '../../utils/scroll.js'\nimport { between } from '../../utils/format.js'\nimport { prevent } from '../../utils/event.js'\nimport { hSlot, hDir } from '../../utils/private/render.js'\n\nconst\n  PULLER_HEIGHT = 40,\n  OFFSET_TOP = 20\n\nexport default createComponent({\n  name: 'QPullToRefresh',\n\n  props: {\n    color: String,\n    bgColor: String,\n    icon: String,\n    noMouse: Boolean,\n    disable: Boolean,\n\n    scrollTarget: {\n      default: void 0\n    }\n  },\n\n  emits: [ 'refresh' ],\n\n  setup (props, { slots, emit }) {\n    const { proxy } = getCurrentInstance()\n    const { $q } = proxy\n\n    const state = ref('pull')\n    const pullRatio = ref(0)\n    const pulling = ref(false)\n    const pullPosition = ref(-PULLER_HEIGHT)\n    const animating = ref(false)\n    const positionCSS = ref({})\n\n    const style = computed(() => ({\n      opacity: pullRatio.value,\n      transform: `translateY(${ pullPosition.value }px) rotate(${ pullRatio.value * 360 }deg)`\n    }))\n\n    const classes = computed(() =>\n      'q-pull-to-refresh__puller row flex-center'\n      + (animating.value === true ? ' q-pull-to-refresh__puller--animating' : '')\n      + (props.bgColor !== void 0 ? ` bg-${ props.bgColor }` : '')\n    )\n\n    function pull (event) {\n      if (event.isFinal === true) {\n        if (pulling.value === true) {\n          pulling.value = false\n\n          if (state.value === 'pulled') {\n            state.value = 'refreshing'\n            animateTo({ pos: OFFSET_TOP })\n            trigger()\n          }\n          else if (state.value === 'pull') {\n            animateTo({ pos: -PULLER_HEIGHT, ratio: 0 })\n          }\n        }\n\n        return\n      }\n\n      if (animating.value === true || state.value === 'refreshing') {\n        return false\n      }\n\n      if (event.isFirst === true) {\n        if (getVerticalScrollPosition(localScrollTarget) !== 0 || event.direction !== 'down') {\n          if (pulling.value === true) {\n            pulling.value = false\n            state.value = 'pull'\n            animateTo({ pos: -PULLER_HEIGHT, ratio: 0 })\n          }\n\n          return false\n        }\n\n        pulling.value = true\n\n        const { top, left } = $el.getBoundingClientRect()\n        positionCSS.value = {\n          top: top + 'px',\n          left: left + 'px',\n          width: window.getComputedStyle($el).getPropertyValue('width')\n        }\n      }\n\n      prevent(event.evt)\n\n      const distance = Math.min(140, Math.max(0, event.distance.y))\n      pullPosition.value = distance - PULLER_HEIGHT\n      pullRatio.value = between(distance / (OFFSET_TOP + PULLER_HEIGHT), 0, 1)\n\n      const newState = pullPosition.value > OFFSET_TOP ? 'pulled' : 'pull'\n\n      if (state.value !== newState) {\n        state.value = newState\n      }\n    }\n\n    const directives = computed(() => {\n      // if props.disable === false\n      const modifiers = { down: true }\n\n      if (props.noMouse !== true) {\n        modifiers.mouse = true\n      }\n\n      return [ [\n        TouchPan,\n        pull,\n        void 0,\n        modifiers\n      ] ]\n    })\n\n    const contentClass = computed(() =>\n      `q-pull-to-refresh__content${ pulling.value === true ? ' no-pointer-events' : '' }`\n    )\n\n    function trigger () {\n      emit('refresh', () => {\n        animateTo({ pos: -PULLER_HEIGHT, ratio: 0 }, () => {\n          state.value = 'pull'\n        })\n      })\n    }\n\n    let $el, localScrollTarget, timer = null\n\n    function animateTo ({ pos, ratio }, done) {\n      animating.value = true\n      pullPosition.value = pos\n\n      if (ratio !== void 0) {\n        pullRatio.value = ratio\n      }\n\n      timer !== null && clearTimeout(timer)\n      timer = setTimeout(() => {\n        timer = null\n        animating.value = false\n        done && done()\n      }, 300)\n    }\n\n    function updateScrollTarget () {\n      localScrollTarget = getScrollTarget($el, props.scrollTarget)\n    }\n\n    watch(() => props.scrollTarget, updateScrollTarget)\n\n    onMounted(() => {\n      $el = proxy.$el\n      updateScrollTarget()\n    })\n\n    onBeforeUnmount(() => {\n      timer !== null && clearTimeout(timer)\n    })\n\n    // expose public methods\n    Object.assign(proxy, { trigger, updateScrollTarget })\n\n    return () => {\n      const child = [\n        h('div', { class: contentClass.value }, hSlot(slots.default)),\n\n        h('div', {\n          class: 'q-pull-to-refresh__puller-container fixed row flex-center no-pointer-events z-top',\n          style: positionCSS.value\n        }, [\n          h('div', {\n            class: classes.value,\n            style: style.value\n          }, [\n            state.value !== 'refreshing'\n              ? h(QIcon, {\n                name: props.icon || $q.iconSet.pullToRefresh.icon,\n                color: props.color,\n                size: '32px'\n              })\n              : h(QSpinner, {\n                size: '24px',\n                color: props.color\n              })\n          ])\n        ])\n      ]\n\n      return hDir(\n        'div',\n        { class: 'q-pull-to-refresh' },\n        child,\n        'main',\n        props.disable === false,\n        () => directives.value\n      )\n    }\n  }\n})\n",
      "start": 1703982896424,
      "end": 1703982896506,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703982896506,
      "end": 1703982896506,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703982896506,
      "end": 1703982896507,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703982896507,
      "end": 1703982896507,
      "order": "normal"
    }
  ]
}
