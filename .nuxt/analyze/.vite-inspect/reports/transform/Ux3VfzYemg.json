{
  "resolvedId": "/home/vivax/coding/vivax.dev/node_modules/quasar/src/lang.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import defineReactivePlugin from './utils/private/define-reactive-plugin.js'\n// no extension on purpose for next one:\nimport defaultLang from '../lang/en-US'\n\nfunction getLocale () {\n  if (__QUASAR_SSR_SERVER__) { return }\n\n  const val = Array.isArray(navigator.languages) === true && navigator.languages.length !== 0\n    ? navigator.languages[ 0 ]\n    : navigator.language\n\n  if (typeof val === 'string') {\n    return val.split(/[-_]/).map((v, i) => (\n      i === 0\n        ? v.toLowerCase()\n        : (\n            i > 1 || v.length < 4\n              ? v.toUpperCase()\n              : (v[ 0 ].toUpperCase() + v.slice(1).toLowerCase())\n          )\n    )).join('-')\n  }\n}\n\nconst Plugin = defineReactivePlugin({\n  __langPack: {}\n}, {\n  getLocale,\n\n  set (langObject = defaultLang, ssrContext) {\n    const lang = {\n      ...langObject,\n      rtl: langObject.rtl === true,\n      getLocale\n    }\n\n    if (__QUASAR_SSR_SERVER__) {\n      if (ssrContext === void 0) {\n        console.error('SSR ERROR: second param required: Quasar.lang.set(lang, ssrContext)')\n        return\n      }\n\n      lang.set = ssrContext.$q.lang.set\n\n      if (ssrContext.$q.config.lang === void 0 || ssrContext.$q.config.lang.noHtmlAttrs !== true) {\n        const dir = lang.rtl === true ? 'rtl' : 'ltr'\n        const attrs = `lang=${ lang.isoName } dir=${ dir }`\n\n        ssrContext._meta.htmlAttrs = ssrContext.__qPrevLang !== void 0\n          ? ssrContext._meta.htmlAttrs.replace(ssrContext.__qPrevLang, attrs)\n          : attrs\n\n        ssrContext.__qPrevLang = attrs\n      }\n\n      ssrContext.$q.lang = lang\n    }\n    else {\n      lang.set = Plugin.set\n\n      if (Plugin.__langConfig === void 0 || Plugin.__langConfig.noHtmlAttrs !== true) {\n        const el = document.documentElement\n        el.setAttribute('dir', lang.rtl === true ? 'rtl' : 'ltr')\n        el.setAttribute('lang', lang.isoName)\n      }\n\n      Object.assign(Plugin.__langPack, lang)\n\n      Plugin.props = lang\n      Plugin.isoName = lang.isoName\n      Plugin.nativeName = lang.nativeName\n    }\n  },\n\n  install ({ $q, lang, ssrContext }) {\n    if (__QUASAR_SSR_SERVER__) {\n      const initialLang = lang || defaultLang\n\n      $q.lang = {}\n      $q.lang.set = langObject => {\n        this.set(langObject, ssrContext)\n      }\n\n      $q.lang.set(initialLang)\n\n      // one-time SSR server operation\n      if (this.isoName !== initialLang.isoName) {\n        this.isoName = initialLang.isoName\n        this.nativeName = initialLang.nativeName\n        this.props = initialLang\n      }\n    }\n    else {\n      $q.lang = Plugin.__langPack\n      Plugin.__langConfig = $q.config.lang\n\n      if (this.__installed === true) {\n        lang !== void 0 && this.set(lang)\n      }\n      else {\n        this.set(lang || defaultLang)\n      }\n    }\n  }\n})\n\nexport default Plugin\nexport { defaultLang }\n",
      "start": 1703982895866,
      "end": 1703982895988,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703982895989,
      "end": 1703982895989,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import defineReactivePlugin from \"./utils/private/define-reactive-plugin.js\";\nimport defaultLang from \"../lang/en-US\";\nfunction getLocale() {\n  if (false) {\n    return;\n  }\n  const val = Array.isArray(navigator.languages) === true && navigator.languages.length !== 0 ? navigator.languages[0] : navigator.language;\n  if (typeof val === \"string\") {\n    return val.split(/[-_]/).map((v, i) => i === 0 ? v.toLowerCase() : i > 1 || v.length < 4 ? v.toUpperCase() : v[0].toUpperCase() + v.slice(1).toLowerCase()).join(\"-\");\n  }\n}\nconst Plugin = defineReactivePlugin({\n  __langPack: {}\n}, {\n  getLocale,\n  set(langObject = defaultLang, ssrContext) {\n    const lang = {\n      ...langObject,\n      rtl: langObject.rtl === true,\n      getLocale\n    };\n    if (false) {\n      if (ssrContext === void 0) {\n        console.error(\"SSR ERROR: second param required: Quasar.lang.set(lang, ssrContext)\");\n        return;\n      }\n      lang.set = ssrContext.$q.lang.set;\n      if (ssrContext.$q.config.lang === void 0 || ssrContext.$q.config.lang.noHtmlAttrs !== true) {\n        const dir = lang.rtl === true ? \"rtl\" : \"ltr\";\n        const attrs = `lang=${lang.isoName} dir=${dir}`;\n        ssrContext._meta.htmlAttrs = ssrContext.__qPrevLang !== void 0 ? ssrContext._meta.htmlAttrs.replace(ssrContext.__qPrevLang, attrs) : attrs;\n        ssrContext.__qPrevLang = attrs;\n      }\n      ssrContext.$q.lang = lang;\n    } else {\n      lang.set = Plugin.set;\n      if (Plugin.__langConfig === void 0 || Plugin.__langConfig.noHtmlAttrs !== true) {\n        const el = document.documentElement;\n        el.setAttribute(\"dir\", lang.rtl === true ? \"rtl\" : \"ltr\");\n        el.setAttribute(\"lang\", lang.isoName);\n      }\n      Object.assign(Plugin.__langPack, lang);\n      Plugin.props = lang;\n      Plugin.isoName = lang.isoName;\n      Plugin.nativeName = lang.nativeName;\n    }\n  },\n  install({ $q, lang, ssrContext }) {\n    if (false) {\n      const initialLang = lang || defaultLang;\n      $q.lang = {};\n      $q.lang.set = (langObject) => {\n        this.set(langObject, ssrContext);\n      };\n      $q.lang.set(initialLang);\n      if (this.isoName !== initialLang.isoName) {\n        this.isoName = initialLang.isoName;\n        this.nativeName = initialLang.nativeName;\n        this.props = initialLang;\n      }\n    } else {\n      $q.lang = Plugin.__langPack;\n      Plugin.__langConfig = $q.config.lang;\n      if (this.__installed === true) {\n        lang !== void 0 && this.set(lang);\n      } else {\n        this.set(lang || defaultLang);\n      }\n    }\n  }\n});\nexport default Plugin;\nexport { defaultLang };\n",
      "start": 1703982895989,
      "end": 1703982896000,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1703982896000,
      "end": 1703982896000,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703982896000,
      "end": 1703982896000,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703982896000,
      "end": 1703982896000,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703982896000,
      "end": 1703982896000,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703982896000,
      "end": 1703982896001,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703982896001,
      "end": 1703982896001,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703982896001,
      "end": 1703982896001,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982896001,
      "end": 1703982896001,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982896001,
      "end": 1703982896001,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982896001,
      "end": 1703982896001,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982896001,
      "end": 1703982896001,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703982896001,
      "end": 1703982896001,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1703982896002,
      "end": 1703982896002,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703982896002,
      "end": 1703982896002,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703982896002,
      "end": 1703982896002,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703982896002,
      "end": 1703982896002,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703982896002,
      "end": 1703982896002,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703982896002,
      "end": 1703982896002,
      "order": "normal"
    }
  ]
}
