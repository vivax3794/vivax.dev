{
  "resolvedId": "/home/vivax/coding/vivax.dev/node_modules/quasar/src/utils/prevent-scroll.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getEventPath, listenOpts, stopAndPrevent } from '../utils/event.js'\nimport { hasScrollbar, getVerticalScrollPosition, getHorizontalScrollPosition } from '../utils/scroll.js'\nimport { client } from '../plugins/Platform.js'\n\nlet\n  registered = 0,\n  scrollPositionX,\n  scrollPositionY,\n  maxScrollTop,\n  vpPendingUpdate = false,\n  bodyLeft,\n  bodyTop,\n  href,\n  closeTimer = null\n\nfunction onWheel (e) {\n  if (shouldPreventScroll(e)) {\n    stopAndPrevent(e)\n  }\n}\n\nfunction shouldPreventScroll (e) {\n  if (e.target === document.body || e.target.classList.contains('q-layout__backdrop')) {\n    return true\n  }\n\n  const\n    path = getEventPath(e),\n    shift = e.shiftKey && !e.deltaX,\n    scrollY = !shift && Math.abs(e.deltaX) <= Math.abs(e.deltaY),\n    delta = shift || scrollY ? e.deltaY : e.deltaX\n\n  for (let index = 0; index < path.length; index++) {\n    const el = path[ index ]\n\n    if (hasScrollbar(el, scrollY)) {\n      return scrollY\n        ? (\n            delta < 0 && el.scrollTop === 0\n              ? true\n              : delta > 0 && el.scrollTop + el.clientHeight === el.scrollHeight\n          )\n        : (\n            delta < 0 && el.scrollLeft === 0\n              ? true\n              : delta > 0 && el.scrollLeft + el.clientWidth === el.scrollWidth\n          )\n    }\n  }\n\n  return true\n}\n\nfunction onAppleScroll (e) {\n  if (e.target === document) {\n    // required, otherwise iOS blocks further scrolling\n    // until the mobile scrollbar dissappears\n    document.scrollingElement.scrollTop = document.scrollingElement.scrollTop // eslint-disable-line\n  }\n}\n\nfunction onAppleResize (evt) {\n  if (vpPendingUpdate === true) {\n    return\n  }\n\n  vpPendingUpdate = true\n\n  requestAnimationFrame(() => {\n    vpPendingUpdate = false\n\n    const\n      { height } = evt.target,\n      { clientHeight, scrollTop } = document.scrollingElement\n\n    if (maxScrollTop === void 0 || height !== window.innerHeight) {\n      maxScrollTop = clientHeight - height\n      document.scrollingElement.scrollTop = scrollTop\n    }\n\n    if (scrollTop > maxScrollTop) {\n      document.scrollingElement.scrollTop -= Math.ceil((scrollTop - maxScrollTop) / 8)\n    }\n  })\n}\n\nfunction apply (action) {\n  const\n    body = document.body,\n    hasViewport = window.visualViewport !== void 0\n\n  if (action === 'add') {\n    const { overflowY, overflowX } = window.getComputedStyle(body)\n\n    scrollPositionX = getHorizontalScrollPosition(window)\n    scrollPositionY = getVerticalScrollPosition(window)\n    bodyLeft = body.style.left\n    bodyTop = body.style.top\n\n    href = window.location.href\n\n    body.style.left = `-${ scrollPositionX }px`\n    body.style.top = `-${ scrollPositionY }px`\n\n    if (overflowX !== 'hidden' && (overflowX === 'scroll' || body.scrollWidth > window.innerWidth)) {\n      body.classList.add('q-body--force-scrollbar-x')\n    }\n    if (overflowY !== 'hidden' && (overflowY === 'scroll' || body.scrollHeight > window.innerHeight)) {\n      body.classList.add('q-body--force-scrollbar-y')\n    }\n\n    body.classList.add('q-body--prevent-scroll')\n    document.qScrollPrevented = true\n\n    if (client.is.ios === true) {\n      if (hasViewport === true) {\n        window.scrollTo(0, 0)\n        window.visualViewport.addEventListener('resize', onAppleResize, listenOpts.passiveCapture)\n        window.visualViewport.addEventListener('scroll', onAppleResize, listenOpts.passiveCapture)\n        window.scrollTo(0, 0)\n      }\n      else {\n        window.addEventListener('scroll', onAppleScroll, listenOpts.passiveCapture)\n      }\n    }\n  }\n\n  if (client.is.desktop === true && client.is.mac === true) {\n    // ref. https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    window[ `${ action }EventListener` ]('wheel', onWheel, listenOpts.notPassive)\n  }\n\n  if (action === 'remove') {\n    if (client.is.ios === true) {\n      if (hasViewport === true) {\n        window.visualViewport.removeEventListener('resize', onAppleResize, listenOpts.passiveCapture)\n        window.visualViewport.removeEventListener('scroll', onAppleResize, listenOpts.passiveCapture)\n      }\n      else {\n        window.removeEventListener('scroll', onAppleScroll, listenOpts.passiveCapture)\n      }\n    }\n\n    body.classList.remove('q-body--prevent-scroll')\n    body.classList.remove('q-body--force-scrollbar-x')\n    body.classList.remove('q-body--force-scrollbar-y')\n\n    document.qScrollPrevented = false\n\n    body.style.left = bodyLeft\n    body.style.top = bodyTop\n\n    // scroll back only if route has not changed\n    if (window.location.href === href) {\n      window.scrollTo(scrollPositionX, scrollPositionY)\n    }\n\n    maxScrollTop = void 0\n  }\n}\n\nexport default function (state) {\n  let action = 'add'\n\n  if (state === true) {\n    registered++\n\n    if (closeTimer !== null) {\n      clearTimeout(closeTimer)\n      closeTimer = null\n      return\n    }\n\n    if (registered > 1) {\n      return\n    }\n  }\n  else {\n    if (registered === 0) {\n      return\n    }\n\n    registered--\n\n    if (registered > 0) {\n      return\n    }\n\n    action = 'remove'\n\n    if (client.is.ios === true && client.is.nativeMobile === true) {\n      closeTimer !== null && clearTimeout(closeTimer)\n      closeTimer = setTimeout(() => {\n        apply(action)\n        closeTimer = null\n      }, 100)\n      return\n    }\n  }\n\n  apply(action)\n}\n",
      "start": 1703982896755,
      "end": 1703982896833,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703982896833,
      "end": 1703982896833,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703982896833,
      "end": 1703982896834,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703982896834,
      "end": 1703982896834,
      "order": "normal"
    }
  ]
}
