{
  "resolvedId": "/home/vivax/coding/vivax.dev/node_modules/quasar/src/components/page/QPage.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { h, computed, inject, getCurrentInstance } from 'vue'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { pageContainerKey, layoutKey, emptyRenderFn } from '../../utils/private/symbols.js'\n\nexport default createComponent({\n  name: 'QPage',\n\n  props: {\n    padding: Boolean,\n    styleFn: Function\n  },\n\n  setup (props, { slots }) {\n    const { proxy: { $q } } = getCurrentInstance()\n\n    const $layout = inject(layoutKey, emptyRenderFn)\n    if ($layout === emptyRenderFn) {\n      console.error('QPage needs to be a deep child of QLayout')\n      return emptyRenderFn\n    }\n\n    const $pageContainer = inject(pageContainerKey, emptyRenderFn)\n    if ($pageContainer === emptyRenderFn) {\n      console.error('QPage needs to be child of QPageContainer')\n      return emptyRenderFn\n    }\n\n    const style = computed(() => {\n      const offset\n        = ($layout.header.space === true ? $layout.header.size : 0)\n        + ($layout.footer.space === true ? $layout.footer.size : 0)\n\n      if (typeof props.styleFn === 'function') {\n        const height = $layout.isContainer.value === true\n          ? $layout.containerHeight.value\n          : $q.screen.height\n\n        return props.styleFn(offset, height)\n      }\n\n      return {\n        minHeight: $layout.isContainer.value === true\n          ? ($layout.containerHeight.value - offset) + 'px'\n          : (\n              $q.screen.height === 0\n                ? (offset !== 0 ? `calc(100vh - ${ offset }px)` : '100vh')\n                : ($q.screen.height - offset) + 'px'\n            )\n      }\n    })\n\n    const classes = computed(() =>\n      `q-page${ props.padding === true ? ' q-layout-padding' : '' }`\n    )\n\n    return () => h('main', {\n      class: classes.value,\n      style: style.value\n    }, hSlot(slots.default))\n  }\n})\n",
      "start": 1703982896350,
      "end": 1703982896473,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703982896473,
      "end": 1703982896473,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982896474,
      "end": 1703982896474,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982896474,
      "end": 1703982896474,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982896474,
      "end": 1703982896474,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982896474,
      "end": 1703982896474,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703982896474,
      "end": 1703982896474,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1703982896474,
      "end": 1703982896474,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703982896474,
      "end": 1703982896474,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703982896474,
      "end": 1703982896474,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703982896474,
      "end": 1703982896474,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703982896474,
      "end": 1703982896474,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703982896474,
      "end": 1703982896474,
      "order": "normal"
    }
  ]
}
