{
  "resolvedId": "/home/vivax/coding/vivax.dev/node_modules/quasar/src/components/page-scroller/QPageScroller.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { h, ref, computed, watch, onBeforeUnmount, getCurrentInstance, Transition } from 'vue'\n\nimport usePageSticky, { usePageStickyProps } from '../page-sticky/use-page-sticky.js'\nimport { getScrollTarget, setVerticalScrollPosition } from '../../utils/scroll.js'\n\nimport { createComponent } from '../../utils/private/create.js'\n\nexport default createComponent({\n  name: 'QPageScroller',\n\n  props: {\n    ...usePageStickyProps,\n\n    scrollOffset: {\n      type: Number,\n      default: 1000\n    },\n\n    reverse: Boolean,\n\n    duration: {\n      type: Number,\n      default: 300\n    },\n\n    offset: {\n      default: () => [ 18, 18 ]\n    }\n  },\n\n  emits: [ 'click' ],\n\n  setup (props, { slots, emit }) {\n    const { proxy: { $q } } = getCurrentInstance()\n    const { $layout, getStickyContent } = usePageSticky()\n    const rootRef = ref(null)\n\n    let heightWatcher\n\n    const scrollHeight = computed(() => $layout.height.value - (\n      $layout.isContainer.value === true\n        ? $layout.containerHeight.value\n        : $q.screen.height\n    ))\n\n    function isVisible () {\n      return props.reverse === true\n        ? scrollHeight.value - $layout.scroll.value.position > props.scrollOffset\n        : $layout.scroll.value.position > props.scrollOffset\n    }\n\n    const showing = ref(isVisible())\n\n    function updateVisibility () {\n      const newVal = isVisible()\n      if (showing.value !== newVal) {\n        showing.value = newVal\n      }\n    }\n\n    function updateReverse () {\n      if (props.reverse === true) {\n        if (heightWatcher === void 0) {\n          heightWatcher = watch(scrollHeight, updateVisibility)\n        }\n      }\n      else {\n        cleanup()\n      }\n    }\n\n    watch($layout.scroll, updateVisibility)\n    watch(() => props.reverse, updateReverse)\n\n    function cleanup () {\n      if (heightWatcher !== void 0) {\n        heightWatcher()\n        heightWatcher = void 0\n      }\n    }\n\n    function onClick (e) {\n      const target = getScrollTarget(\n        $layout.isContainer.value === true\n          ? rootRef.value\n          : $layout.rootRef.value\n      )\n\n      setVerticalScrollPosition(\n        target,\n        props.reverse === true ? $layout.height.value : 0,\n        props.duration\n      )\n\n      emit('click', e)\n    }\n\n    function getContent () {\n      return showing.value === true\n        ? h('div', {\n          ref: rootRef,\n          class: 'q-page-scroller',\n          onClick\n        }, getStickyContent(slots))\n        : null\n    }\n\n    updateReverse()\n\n    onBeforeUnmount(cleanup)\n\n    return () => h(\n      Transition,\n      { name: 'q-transition--fade' },\n      getContent\n    )\n  }\n})\n",
      "start": 1703982896378,
      "end": 1703982896492,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703982896492,
      "end": 1703982896492,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703982896493,
      "end": 1703982896493,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703982896493,
      "end": 1703982896493,
      "order": "normal"
    }
  ]
}
