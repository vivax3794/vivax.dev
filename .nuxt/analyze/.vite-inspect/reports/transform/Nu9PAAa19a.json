{
  "resolvedId": "/home/vivax/coding/vivax.dev/node_modules/quasar/src/utils/scroll.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { css, getElement } from './dom.js'\n\nconst scrollTargets = __QUASAR_SSR_SERVER__\n  ? []\n  : [ null, document, document.body, document.scrollingElement, document.documentElement ]\n\nexport function getScrollTarget (el, targetEl) {\n  let target = getElement(targetEl)\n\n  if (target === void 0) {\n    if (el === void 0 || el === null) {\n      return window\n    }\n\n    target = el.closest('.scroll,.scroll-y,.overflow-auto')\n  }\n\n  return scrollTargets.includes(target)\n    ? window\n    : target\n}\n\nexport function getScrollHeight (el) {\n  return (el === window ? document.body : el).scrollHeight\n}\n\nexport function getScrollWidth (el) {\n  return (el === window ? document.body : el).scrollWidth\n}\n\nexport function getVerticalScrollPosition (scrollTarget) {\n  return scrollTarget === window\n    ? window.pageYOffset || window.scrollY || document.body.scrollTop || 0\n    : scrollTarget.scrollTop\n}\n\nexport function getHorizontalScrollPosition (scrollTarget) {\n  return scrollTarget === window\n    ? window.pageXOffset || window.scrollX || document.body.scrollLeft || 0\n    : scrollTarget.scrollLeft\n}\n\nexport function animVerticalScrollTo (el, to, duration = 0 /* , prevTime */) {\n  const prevTime = arguments[ 3 ] === void 0 ? performance.now() : arguments[ 3 ]\n  const pos = getVerticalScrollPosition(el)\n\n  if (duration <= 0) {\n    if (pos !== to) {\n      setScroll(el, to)\n    }\n    return\n  }\n\n  requestAnimationFrame(nowTime => {\n    const frameTime = nowTime - prevTime\n    const newPos = pos + (to - pos) / Math.max(frameTime, duration) * frameTime\n    setScroll(el, newPos)\n    if (newPos !== to) {\n      animVerticalScrollTo(el, to, duration - frameTime, nowTime)\n    }\n  })\n}\n\nexport function animHorizontalScrollTo (el, to, duration = 0 /* , prevTime */) {\n  const prevTime = arguments[ 3 ] === void 0 ? performance.now() : arguments[ 3 ]\n  const pos = getHorizontalScrollPosition(el)\n\n  if (duration <= 0) {\n    if (pos !== to) {\n      setHorizontalScroll(el, to)\n    }\n    return\n  }\n\n  requestAnimationFrame(nowTime => {\n    const frameTime = nowTime - prevTime\n    const newPos = pos + (to - pos) / Math.max(frameTime, duration) * frameTime\n    setHorizontalScroll(el, newPos)\n    if (newPos !== to) {\n      animHorizontalScrollTo(el, to, duration - frameTime, nowTime)\n    }\n  })\n}\n\nfunction setScroll (scrollTarget, offset) {\n  if (scrollTarget === window) {\n    window.scrollTo(window.pageXOffset || window.scrollX || document.body.scrollLeft || 0, offset)\n    return\n  }\n  scrollTarget.scrollTop = offset\n}\n\nfunction setHorizontalScroll (scrollTarget, offset) {\n  if (scrollTarget === window) {\n    window.scrollTo(offset, window.pageYOffset || window.scrollY || document.body.scrollTop || 0)\n    return\n  }\n  scrollTarget.scrollLeft = offset\n}\n\nexport function setVerticalScrollPosition (scrollTarget, offset, duration) {\n  if (duration) {\n    animVerticalScrollTo(scrollTarget, offset, duration)\n    return\n  }\n  setScroll(scrollTarget, offset)\n}\n\nexport function setHorizontalScrollPosition (scrollTarget, offset, duration) {\n  if (duration) {\n    animHorizontalScrollTo(scrollTarget, offset, duration)\n    return\n  }\n  setHorizontalScroll(scrollTarget, offset)\n}\n\nlet size\nexport function getScrollbarWidth () {\n  if (size !== undefined) {\n    return size\n  }\n\n  const\n    inner = document.createElement('p'),\n    outer = document.createElement('div')\n\n  css(inner, {\n    width: '100%',\n    height: '200px'\n  })\n  css(outer, {\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    visibility: 'hidden',\n    width: '200px',\n    height: '150px',\n    overflow: 'hidden'\n  })\n\n  outer.appendChild(inner)\n\n  document.body.appendChild(outer)\n\n  const w1 = inner.offsetWidth\n  outer.style.overflow = 'scroll'\n  let w2 = inner.offsetWidth\n\n  if (w1 === w2) {\n    w2 = outer.clientWidth\n  }\n\n  outer.remove()\n  size = w1 - w2\n\n  return size\n}\n\nexport function hasScrollbar (el, onY = true) {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) {\n    return false\n  }\n\n  return onY\n    ? (\n        el.scrollHeight > el.clientHeight && (\n          el.classList.contains('scroll')\n          || el.classList.contains('overflow-auto')\n          || [ 'auto', 'scroll' ].includes(window.getComputedStyle(el)[ 'overflow-y' ])\n        )\n      )\n    : (\n        el.scrollWidth > el.clientWidth && (\n          el.classList.contains('scroll')\n          || el.classList.contains('overflow-auto')\n          || [ 'auto', 'scroll' ].includes(window.getComputedStyle(el)[ 'overflow-x' ])\n        )\n      )\n}\n\nexport default {\n  getScrollTarget,\n\n  getScrollHeight,\n  getScrollWidth,\n\n  getVerticalScrollPosition,\n  getHorizontalScrollPosition,\n\n  animVerticalScrollTo,\n  animHorizontalScrollTo,\n\n  setVerticalScrollPosition,\n  setHorizontalScrollPosition,\n\n  getScrollbarWidth,\n  hasScrollbar\n}\n",
      "start": 1703982896790,
      "end": 1703982896850,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703982896850,
      "end": 1703982896850,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { css, getElement } from \"./dom.js\";\nconst scrollTargets = false ? [] : [null, document, document.body, document.scrollingElement, document.documentElement];\nexport function getScrollTarget(el, targetEl) {\n  let target = getElement(targetEl);\n  if (target === void 0) {\n    if (el === void 0 || el === null) {\n      return window;\n    }\n    target = el.closest(\".scroll,.scroll-y,.overflow-auto\");\n  }\n  return scrollTargets.includes(target) ? window : target;\n}\nexport function getScrollHeight(el) {\n  return (el === window ? document.body : el).scrollHeight;\n}\nexport function getScrollWidth(el) {\n  return (el === window ? document.body : el).scrollWidth;\n}\nexport function getVerticalScrollPosition(scrollTarget) {\n  return scrollTarget === window ? window.pageYOffset || window.scrollY || document.body.scrollTop || 0 : scrollTarget.scrollTop;\n}\nexport function getHorizontalScrollPosition(scrollTarget) {\n  return scrollTarget === window ? window.pageXOffset || window.scrollX || document.body.scrollLeft || 0 : scrollTarget.scrollLeft;\n}\nexport function animVerticalScrollTo(el, to, duration = 0) {\n  const prevTime = arguments[3] === void 0 ? performance.now() : arguments[3];\n  const pos = getVerticalScrollPosition(el);\n  if (duration <= 0) {\n    if (pos !== to) {\n      setScroll(el, to);\n    }\n    return;\n  }\n  requestAnimationFrame((nowTime) => {\n    const frameTime = nowTime - prevTime;\n    const newPos = pos + (to - pos) / Math.max(frameTime, duration) * frameTime;\n    setScroll(el, newPos);\n    if (newPos !== to) {\n      animVerticalScrollTo(el, to, duration - frameTime, nowTime);\n    }\n  });\n}\nexport function animHorizontalScrollTo(el, to, duration = 0) {\n  const prevTime = arguments[3] === void 0 ? performance.now() : arguments[3];\n  const pos = getHorizontalScrollPosition(el);\n  if (duration <= 0) {\n    if (pos !== to) {\n      setHorizontalScroll(el, to);\n    }\n    return;\n  }\n  requestAnimationFrame((nowTime) => {\n    const frameTime = nowTime - prevTime;\n    const newPos = pos + (to - pos) / Math.max(frameTime, duration) * frameTime;\n    setHorizontalScroll(el, newPos);\n    if (newPos !== to) {\n      animHorizontalScrollTo(el, to, duration - frameTime, nowTime);\n    }\n  });\n}\nfunction setScroll(scrollTarget, offset) {\n  if (scrollTarget === window) {\n    window.scrollTo(window.pageXOffset || window.scrollX || document.body.scrollLeft || 0, offset);\n    return;\n  }\n  scrollTarget.scrollTop = offset;\n}\nfunction setHorizontalScroll(scrollTarget, offset) {\n  if (scrollTarget === window) {\n    window.scrollTo(offset, window.pageYOffset || window.scrollY || document.body.scrollTop || 0);\n    return;\n  }\n  scrollTarget.scrollLeft = offset;\n}\nexport function setVerticalScrollPosition(scrollTarget, offset, duration) {\n  if (duration) {\n    animVerticalScrollTo(scrollTarget, offset, duration);\n    return;\n  }\n  setScroll(scrollTarget, offset);\n}\nexport function setHorizontalScrollPosition(scrollTarget, offset, duration) {\n  if (duration) {\n    animHorizontalScrollTo(scrollTarget, offset, duration);\n    return;\n  }\n  setHorizontalScroll(scrollTarget, offset);\n}\nlet size;\nexport function getScrollbarWidth() {\n  if (size !== void 0) {\n    return size;\n  }\n  const inner = document.createElement(\"p\"), outer = document.createElement(\"div\");\n  css(inner, {\n    width: \"100%\",\n    height: \"200px\"\n  });\n  css(outer, {\n    position: \"absolute\",\n    top: \"0px\",\n    left: \"0px\",\n    visibility: \"hidden\",\n    width: \"200px\",\n    height: \"150px\",\n    overflow: \"hidden\"\n  });\n  outer.appendChild(inner);\n  document.body.appendChild(outer);\n  const w1 = inner.offsetWidth;\n  outer.style.overflow = \"scroll\";\n  let w2 = inner.offsetWidth;\n  if (w1 === w2) {\n    w2 = outer.clientWidth;\n  }\n  outer.remove();\n  size = w1 - w2;\n  return size;\n}\nexport function hasScrollbar(el, onY = true) {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) {\n    return false;\n  }\n  return onY ? el.scrollHeight > el.clientHeight && (el.classList.contains(\"scroll\") || el.classList.contains(\"overflow-auto\") || [\"auto\", \"scroll\"].includes(window.getComputedStyle(el)[\"overflow-y\"])) : el.scrollWidth > el.clientWidth && (el.classList.contains(\"scroll\") || el.classList.contains(\"overflow-auto\") || [\"auto\", \"scroll\"].includes(window.getComputedStyle(el)[\"overflow-x\"]));\n}\nexport default {\n  getScrollTarget,\n  getScrollHeight,\n  getScrollWidth,\n  getVerticalScrollPosition,\n  getHorizontalScrollPosition,\n  animVerticalScrollTo,\n  animHorizontalScrollTo,\n  setVerticalScrollPosition,\n  setHorizontalScrollPosition,\n  getScrollbarWidth,\n  hasScrollbar\n};\n",
      "start": 1703982896850,
      "end": 1703982896882,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1703982896882,
      "end": 1703982896882,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703982896883,
      "end": 1703982896883,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703982896883,
      "end": 1703982896883,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703982896883,
      "end": 1703982896883,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703982896883,
      "end": 1703982896883,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703982896883,
      "end": 1703982896883,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703982896883,
      "end": 1703982896883,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982896883,
      "end": 1703982896884,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982896884,
      "end": 1703982896884,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982896884,
      "end": 1703982896884,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982896884,
      "end": 1703982896884,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703982896884,
      "end": 1703982896884,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1703982896884,
      "end": 1703982896884,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703982896884,
      "end": 1703982896884,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703982896884,
      "end": 1703982896884,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703982896884,
      "end": 1703982896884,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703982896884,
      "end": 1703982896884,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703982896884,
      "end": 1703982896884,
      "order": "normal"
    }
  ]
}
