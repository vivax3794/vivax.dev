{
  "resolvedId": "/home/vivax/coding/vivax.dev/node_modules/quasar/src/components/item/QItem.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { h, ref, computed, getCurrentInstance } from 'vue'\n\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js'\nimport useRouterLink, { useRouterLinkProps } from '../../composables/private/use-router-link.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { hUniqueSlot } from '../../utils/private/render.js'\nimport { stopAndPrevent } from '../../utils/event.js'\nimport { isKeyCode } from '../../utils/private/key-composition.js'\n\nexport default createComponent({\n  name: 'QItem',\n\n  props: {\n    ...useDarkProps,\n    ...useRouterLinkProps,\n\n    tag: {\n      type: String,\n      default: 'div'\n    },\n\n    active: {\n      type: Boolean,\n      default: null\n    },\n\n    clickable: Boolean,\n    dense: Boolean,\n    insetLevel: Number,\n\n    tabindex: [ String, Number ],\n\n    focused: Boolean,\n    manualFocus: Boolean\n  },\n\n  emits: [ 'click', 'keyup' ],\n\n  setup (props, { slots, emit }) {\n    const { proxy: { $q } } = getCurrentInstance()\n\n    const isDark = useDark(props, $q)\n    const { hasLink, linkAttrs, linkClass, linkTag, navigateOnClick } = useRouterLink()\n\n    const rootRef = ref(null)\n    const blurTargetRef = ref(null)\n\n    const isActionable = computed(() =>\n      props.clickable === true\n        || hasLink.value === true\n        || props.tag === 'label'\n    )\n\n    const isClickable = computed(() =>\n      props.disable !== true && isActionable.value === true\n    )\n\n    const classes = computed(() =>\n      'q-item q-item-type row no-wrap'\n      + (props.dense === true ? ' q-item--dense' : '')\n      + (isDark.value === true ? ' q-item--dark' : '')\n      + (\n        hasLink.value === true && props.active === null\n          ? linkClass.value\n          : (\n              props.active === true\n                ? ` q-item--active${ props.activeClass !== void 0 ? ` ${ props.activeClass }` : '' }`\n                : ''\n            )\n      )\n      + (props.disable === true ? ' disabled' : '')\n      + (\n        isClickable.value === true\n          ? ' q-item--clickable q-link cursor-pointer '\n            + (props.manualFocus === true ? 'q-manual-focusable' : 'q-focusable q-hoverable')\n            + (props.focused === true ? ' q-manual-focusable--focused' : '')\n          : ''\n      )\n    )\n\n    const style = computed(() => {\n      if (props.insetLevel === void 0) {\n        return null\n      }\n\n      const dir = $q.lang.rtl === true ? 'Right' : 'Left'\n      return {\n        [ 'padding' + dir ]: (16 + props.insetLevel * 56) + 'px'\n      }\n    })\n\n    function onClick (e) {\n      if (isClickable.value === true) {\n        if (blurTargetRef.value !== null) {\n          if (e.qKeyEvent !== true && document.activeElement === rootRef.value) {\n            blurTargetRef.value.focus()\n          }\n          else if (document.activeElement === blurTargetRef.value) {\n            rootRef.value.focus()\n          }\n        }\n\n        navigateOnClick(e)\n      }\n    }\n\n    function onKeyup (e) {\n      if (isClickable.value === true && isKeyCode(e, [ 13, 32 ]) === true) {\n        stopAndPrevent(e)\n\n        // for ripple\n        e.qKeyEvent = true\n\n        // for click trigger\n        const evt = new MouseEvent('click', e)\n        evt.qKeyEvent = true\n        rootRef.value.dispatchEvent(evt)\n      }\n\n      emit('keyup', e)\n    }\n\n    function getContent () {\n      const child = hUniqueSlot(slots.default, [])\n\n      isClickable.value === true && child.unshift(\n        h('div', { class: 'q-focus-helper', tabindex: -1, ref: blurTargetRef })\n      )\n\n      return child\n    }\n\n    return () => {\n      const data = {\n        ref: rootRef,\n        class: classes.value,\n        style: style.value,\n        role: 'listitem',\n        onClick,\n        onKeyup\n      }\n\n      if (isClickable.value === true) {\n        data.tabindex = props.tabindex || '0'\n        Object.assign(data, linkAttrs.value)\n      }\n      else if (isActionable.value === true) {\n        data[ 'aria-disabled' ] = 'true'\n      }\n\n      return h(\n        linkTag.value,\n        data,\n        getContent()\n      )\n    }\n  }\n})\n",
      "start": 1703982896286,
      "end": 1703982896425,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982896425,
      "end": 1703982896425,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982896425,
      "end": 1703982896425,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982896425,
      "end": 1703982896425,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703982896425,
      "end": 1703982896425,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703982896425,
      "end": 1703982896425,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703982896425,
      "end": 1703982896425,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703982896425,
      "end": 1703982896425,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703982896425,
      "end": 1703982896425,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703982896426,
      "end": 1703982896426,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703982896426,
      "end": 1703982896427,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703982896427,
      "end": 1703982896427,
      "order": "normal"
    }
  ]
}
