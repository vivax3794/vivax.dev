{
  "resolvedId": "/home/vivax/coding/vivax.dev/node_modules/quasar/src/directives/Ripple.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createDirective } from '../utils/private/create.js'\nimport { css } from '../utils/dom.js'\nimport { position, stop, addEvt, cleanEvt } from '../utils/event.js'\nimport { isKeyCode } from '../utils/private/key-composition.js'\nimport throttle from '../utils/throttle.js'\nimport getSSRProps from '../utils/private/noop-ssr-directive-transform.js'\n\nfunction showRipple (evt, el, ctx, forceCenter) {\n  ctx.modifiers.stop === true && stop(evt)\n\n  const color = ctx.modifiers.color\n  let center = ctx.modifiers.center\n  center = center === true || forceCenter === true\n\n  const\n    node = document.createElement('span'),\n    innerNode = document.createElement('span'),\n    pos = position(evt),\n    { left, top, width, height } = el.getBoundingClientRect(),\n    diameter = Math.sqrt(width * width + height * height),\n    radius = diameter / 2,\n    centerX = `${ (width - diameter) / 2 }px`,\n    x = center ? centerX : `${ pos.left - left - radius }px`,\n    centerY = `${ (height - diameter) / 2 }px`,\n    y = center ? centerY : `${ pos.top - top - radius }px`\n\n  innerNode.className = 'q-ripple__inner'\n  css(innerNode, {\n    height: `${ diameter }px`,\n    width: `${ diameter }px`,\n    transform: `translate3d(${ x },${ y },0) scale3d(.2,.2,1)`,\n    opacity: 0\n  })\n\n  node.className = `q-ripple${ color ? ' text-' + color : '' }`\n  node.setAttribute('dir', 'ltr')\n  node.appendChild(innerNode)\n  el.appendChild(node)\n\n  const abort = () => {\n    node.remove()\n    clearTimeout(timer)\n  }\n  ctx.abort.push(abort)\n\n  let timer = setTimeout(() => {\n    innerNode.classList.add('q-ripple__inner--enter')\n    innerNode.style.transform = `translate3d(${ centerX },${ centerY },0) scale3d(1,1,1)`\n    innerNode.style.opacity = 0.2\n\n    timer = setTimeout(() => {\n      innerNode.classList.remove('q-ripple__inner--enter')\n      innerNode.classList.add('q-ripple__inner--leave')\n      innerNode.style.opacity = 0\n\n      timer = setTimeout(() => {\n        node.remove()\n        ctx.abort.splice(ctx.abort.indexOf(abort), 1)\n      }, 275)\n    }, 250)\n  }, 50)\n}\n\nfunction updateModifiers (ctx, { modifiers, value, arg }) {\n  const cfg = Object.assign({}, ctx.cfg.ripple, modifiers, value)\n  ctx.modifiers = {\n    early: cfg.early === true,\n    stop: cfg.stop === true,\n    center: cfg.center === true,\n    color: cfg.color || arg,\n    keyCodes: [].concat(cfg.keyCodes || 13)\n  }\n}\n\nexport default createDirective(__QUASAR_SSR_SERVER__\n  ? { name: 'ripple', getSSRProps }\n  : {\n      name: 'ripple',\n\n      beforeMount (el, binding) {\n        const cfg = binding.instance.$.appContext.config.globalProperties.$q.config || {}\n\n        if (cfg.ripple === false) {\n          return\n        }\n\n        const ctx = {\n          cfg,\n          enabled: binding.value !== false,\n          modifiers: {},\n          abort: [],\n\n          start (evt) {\n            if (\n              ctx.enabled === true\n              && evt.qSkipRipple !== true\n              && evt.type === (ctx.modifiers.early === true ? 'pointerdown' : 'click')\n            ) {\n              showRipple(evt, el, ctx, evt.qKeyEvent === true)\n            }\n          },\n\n          keystart: throttle(evt => {\n            if (\n              ctx.enabled === true\n              && evt.qSkipRipple !== true\n              && isKeyCode(evt, ctx.modifiers.keyCodes) === true\n              && evt.type === `key${ ctx.modifiers.early === true ? 'down' : 'up' }`\n            ) {\n              showRipple(evt, el, ctx, true)\n            }\n          }, 300)\n        }\n\n        updateModifiers(ctx, binding)\n\n        el.__qripple = ctx\n\n        addEvt(ctx, 'main', [\n          [ el, 'pointerdown', 'start', 'passive' ],\n          [ el, 'click', 'start', 'passive' ],\n          [ el, 'keydown', 'keystart', 'passive' ],\n          [ el, 'keyup', 'keystart', 'passive' ]\n        ])\n      },\n\n      updated (el, binding) {\n        if (binding.oldValue !== binding.value) {\n          const ctx = el.__qripple\n          if (ctx !== void 0) {\n            ctx.enabled = binding.value !== false\n\n            if (ctx.enabled === true && Object(binding.value) === binding.value) {\n              updateModifiers(ctx, binding)\n            }\n          }\n        }\n      },\n\n      beforeUnmount (el) {\n        const ctx = el.__qripple\n        if (ctx !== void 0) {\n          ctx.abort.forEach(fn => { fn() })\n          cleanEvt(ctx, 'main')\n          delete el._qripple\n        }\n      }\n    }\n)\n",
      "start": 1703982901029,
      "end": 1703982901041,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703982901041,
      "end": 1703982901041,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { createDirective } from \"../utils/private/create.js\";\nimport { css } from \"../utils/dom.js\";\nimport { position, stop, addEvt, cleanEvt } from \"../utils/event.js\";\nimport { isKeyCode } from \"../utils/private/key-composition.js\";\nimport throttle from \"../utils/throttle.js\";\nimport getSSRProps from \"../utils/private/noop-ssr-directive-transform.js\";\nfunction showRipple(evt, el, ctx, forceCenter) {\n  ctx.modifiers.stop === true && stop(evt);\n  const color = ctx.modifiers.color;\n  let center = ctx.modifiers.center;\n  center = center === true || forceCenter === true;\n  const node = (void 0).createElement(\"span\"), innerNode = (void 0).createElement(\"span\"), pos = position(evt), { left, top, width, height } = el.getBoundingClientRect(), diameter = Math.sqrt(width * width + height * height), radius = diameter / 2, centerX = `${(width - diameter) / 2}px`, x = center ? centerX : `${pos.left - left - radius}px`, centerY = `${(height - diameter) / 2}px`, y = center ? centerY : `${pos.top - top - radius}px`;\n  innerNode.className = \"q-ripple__inner\";\n  css(innerNode, {\n    height: `${diameter}px`,\n    width: `${diameter}px`,\n    transform: `translate3d(${x},${y},0) scale3d(.2,.2,1)`,\n    opacity: 0\n  });\n  node.className = `q-ripple${color ? \" text-\" + color : \"\"}`;\n  node.setAttribute(\"dir\", \"ltr\");\n  node.appendChild(innerNode);\n  el.appendChild(node);\n  const abort = () => {\n    node.remove();\n    clearTimeout(timer);\n  };\n  ctx.abort.push(abort);\n  let timer = setTimeout(() => {\n    innerNode.classList.add(\"q-ripple__inner--enter\");\n    innerNode.style.transform = `translate3d(${centerX},${centerY},0) scale3d(1,1,1)`;\n    innerNode.style.opacity = 0.2;\n    timer = setTimeout(() => {\n      innerNode.classList.remove(\"q-ripple__inner--enter\");\n      innerNode.classList.add(\"q-ripple__inner--leave\");\n      innerNode.style.opacity = 0;\n      timer = setTimeout(() => {\n        node.remove();\n        ctx.abort.splice(ctx.abort.indexOf(abort), 1);\n      }, 275);\n    }, 250);\n  }, 50);\n}\nfunction updateModifiers(ctx, { modifiers, value, arg }) {\n  const cfg = Object.assign({}, ctx.cfg.ripple, modifiers, value);\n  ctx.modifiers = {\n    early: cfg.early === true,\n    stop: cfg.stop === true,\n    center: cfg.center === true,\n    color: cfg.color || arg,\n    keyCodes: [].concat(cfg.keyCodes || 13)\n  };\n}\nexport default createDirective(\n  true ? { name: \"ripple\", getSSRProps } : {\n    name: \"ripple\",\n    beforeMount(el, binding) {\n      const cfg = binding.instance.$.appContext.config.globalProperties.$q.config || {};\n      if (cfg.ripple === false) {\n        return;\n      }\n      const ctx = {\n        cfg,\n        enabled: binding.value !== false,\n        modifiers: {},\n        abort: [],\n        start(evt) {\n          if (ctx.enabled === true && evt.qSkipRipple !== true && evt.type === (ctx.modifiers.early === true ? \"pointerdown\" : \"click\")) {\n            showRipple(evt, el, ctx, evt.qKeyEvent === true);\n          }\n        },\n        keystart: throttle((evt) => {\n          if (ctx.enabled === true && evt.qSkipRipple !== true && isKeyCode(evt, ctx.modifiers.keyCodes) === true && evt.type === `key${ctx.modifiers.early === true ? \"down\" : \"up\"}`) {\n            showRipple(evt, el, ctx, true);\n          }\n        }, 300)\n      };\n      updateModifiers(ctx, binding);\n      el.__qripple = ctx;\n      addEvt(ctx, \"main\", [\n        [el, \"pointerdown\", \"start\", \"passive\"],\n        [el, \"click\", \"start\", \"passive\"],\n        [el, \"keydown\", \"keystart\", \"passive\"],\n        [el, \"keyup\", \"keystart\", \"passive\"]\n      ]);\n    },\n    updated(el, binding) {\n      if (binding.oldValue !== binding.value) {\n        const ctx = el.__qripple;\n        if (ctx !== void 0) {\n          ctx.enabled = binding.value !== false;\n          if (ctx.enabled === true && Object(binding.value) === binding.value) {\n            updateModifiers(ctx, binding);\n          }\n        }\n      }\n    },\n    beforeUnmount(el) {\n      const ctx = el.__qripple;\n      if (ctx !== void 0) {\n        ctx.abort.forEach((fn) => {\n          fn();\n        });\n        cleanEvt(ctx, \"main\");\n        delete el._qripple;\n      }\n    }\n  }\n);\n",
      "start": 1703982901041,
      "end": 1703982901058,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/home/vivax/coding/vivax.dev/node_modules/quasar/src/directives/Ripple.js\"],\n  \"sourcesContent\": [\"import { createDirective } from '../utils/private/create.js'\\nimport { css } from '../utils/dom.js'\\nimport { position, stop, addEvt, cleanEvt } from '../utils/event.js'\\nimport { isKeyCode } from '../utils/private/key-composition.js'\\nimport throttle from '../utils/throttle.js'\\nimport getSSRProps from '../utils/private/noop-ssr-directive-transform.js'\\n\\nfunction showRipple (evt, el, ctx, forceCenter) {\\n  ctx.modifiers.stop === true && stop(evt)\\n\\n  const color = ctx.modifiers.color\\n  let center = ctx.modifiers.center\\n  center = center === true || forceCenter === true\\n\\n  const\\n    node = document.createElement('span'),\\n    innerNode = document.createElement('span'),\\n    pos = position(evt),\\n    { left, top, width, height } = el.getBoundingClientRect(),\\n    diameter = Math.sqrt(width * width + height * height),\\n    radius = diameter / 2,\\n    centerX = `${ (width - diameter) / 2 }px`,\\n    x = center ? centerX : `${ pos.left - left - radius }px`,\\n    centerY = `${ (height - diameter) / 2 }px`,\\n    y = center ? centerY : `${ pos.top - top - radius }px`\\n\\n  innerNode.className = 'q-ripple__inner'\\n  css(innerNode, {\\n    height: `${ diameter }px`,\\n    width: `${ diameter }px`,\\n    transform: `translate3d(${ x },${ y },0) scale3d(.2,.2,1)`,\\n    opacity: 0\\n  })\\n\\n  node.className = `q-ripple${ color ? ' text-' + color : '' }`\\n  node.setAttribute('dir', 'ltr')\\n  node.appendChild(innerNode)\\n  el.appendChild(node)\\n\\n  const abort = () => {\\n    node.remove()\\n    clearTimeout(timer)\\n  }\\n  ctx.abort.push(abort)\\n\\n  let timer = setTimeout(() => {\\n    innerNode.classList.add('q-ripple__inner--enter')\\n    innerNode.style.transform = `translate3d(${ centerX },${ centerY },0) scale3d(1,1,1)`\\n    innerNode.style.opacity = 0.2\\n\\n    timer = setTimeout(() => {\\n      innerNode.classList.remove('q-ripple__inner--enter')\\n      innerNode.classList.add('q-ripple__inner--leave')\\n      innerNode.style.opacity = 0\\n\\n      timer = setTimeout(() => {\\n        node.remove()\\n        ctx.abort.splice(ctx.abort.indexOf(abort), 1)\\n      }, 275)\\n    }, 250)\\n  }, 50)\\n}\\n\\nfunction updateModifiers (ctx, { modifiers, value, arg }) {\\n  const cfg = Object.assign({}, ctx.cfg.ripple, modifiers, value)\\n  ctx.modifiers = {\\n    early: cfg.early === true,\\n    stop: cfg.stop === true,\\n    center: cfg.center === true,\\n    color: cfg.color || arg,\\n    keyCodes: [].concat(cfg.keyCodes || 13)\\n  }\\n}\\n\\nexport default createDirective(__QUASAR_SSR_SERVER__\\n  ? { name: 'ripple', getSSRProps }\\n  : {\\n      name: 'ripple',\\n\\n      beforeMount (el, binding) {\\n        const cfg = binding.instance.$.appContext.config.globalProperties.$q.config || {}\\n\\n        if (cfg.ripple === false) {\\n          return\\n        }\\n\\n        const ctx = {\\n          cfg,\\n          enabled: binding.value !== false,\\n          modifiers: {},\\n          abort: [],\\n\\n          start (evt) {\\n            if (\\n              ctx.enabled === true\\n              && evt.qSkipRipple !== true\\n              && evt.type === (ctx.modifiers.early === true ? 'pointerdown' : 'click')\\n            ) {\\n              showRipple(evt, el, ctx, evt.qKeyEvent === true)\\n            }\\n          },\\n\\n          keystart: throttle(evt => {\\n            if (\\n              ctx.enabled === true\\n              && evt.qSkipRipple !== true\\n              && isKeyCode(evt, ctx.modifiers.keyCodes) === true\\n              && evt.type === `key${ ctx.modifiers.early === true ? 'down' : 'up' }`\\n            ) {\\n              showRipple(evt, el, ctx, true)\\n            }\\n          }, 300)\\n        }\\n\\n        updateModifiers(ctx, binding)\\n\\n        el.__qripple = ctx\\n\\n        addEvt(ctx, 'main', [\\n          [ el, 'pointerdown', 'start', 'passive' ],\\n          [ el, 'click', 'start', 'passive' ],\\n          [ el, 'keydown', 'keystart', 'passive' ],\\n          [ el, 'keyup', 'keystart', 'passive' ]\\n        ])\\n      },\\n\\n      updated (el, binding) {\\n        if (binding.oldValue !== binding.value) {\\n          const ctx = el.__qripple\\n          if (ctx !== void 0) {\\n            ctx.enabled = binding.value !== false\\n\\n            if (ctx.enabled === true && Object(binding.value) === binding.value) {\\n              updateModifiers(ctx, binding)\\n            }\\n          }\\n        }\\n      },\\n\\n      beforeUnmount (el) {\\n        const ctx = el.__qripple\\n        if (ctx !== void 0) {\\n          ctx.abort.forEach(fn => { fn() })\\n          cleanEvt(ctx, 'main')\\n          delete el._qripple\\n        }\\n      }\\n    }\\n)\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1703982901058,
      "end": 1703982901058,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703982901058,
      "end": 1703982901058,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703982901058,
      "end": 1703982901058,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703982901058,
      "end": 1703982901058,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703982901058,
      "end": 1703982901059,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703982901059,
      "end": 1703982901059,
      "order": "normal"
    }
  ]
}
