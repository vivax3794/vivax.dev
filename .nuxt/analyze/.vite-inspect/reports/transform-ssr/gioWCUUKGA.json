{
  "resolvedId": "/home/vivax/coding/vivax.dev/node_modules/quasar/src/composables/private/use-router-link.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\n * Inspired by RouterLink from Vue Router\n *  --> API should match!\n */\n\nimport { computed, getCurrentInstance } from 'vue'\n\nimport { vmHasRouter } from '../../utils/private/vm.js'\n\n// Get the original path value of a record by following its aliasOf\nfunction getOriginalPath (record) {\n  return record\n    ? (\n        record.aliasOf\n          ? record.aliasOf.path\n          : record.path\n      ) : ''\n}\n\nfunction isSameRouteRecord (a, b) {\n  // since the original record has an undefined value for aliasOf\n  // but all aliases point to the original record, this will always compare\n  // the original record\n  return (a.aliasOf || a) === (b.aliasOf || b)\n}\n\nfunction includesParams (outer, inner) {\n  for (const key in inner) {\n    const\n      innerValue = inner[ key ],\n      outerValue = outer[ key ]\n\n    if (typeof innerValue === 'string') {\n      if (innerValue !== outerValue) {\n        return false\n      }\n    }\n    else if (\n      Array.isArray(outerValue) === false\n      || outerValue.length !== innerValue.length\n      || innerValue.some((value, i) => value !== outerValue[ i ])\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction isEquivalentArray (a, b) {\n  return Array.isArray(b) === true\n    ? a.length === b.length && a.every((value, i) => value === b[ i ])\n    : a.length === 1 && a[ 0 ] === b\n}\n\nfunction isSameRouteLocationParamsValue (a, b) {\n  return Array.isArray(a) === true\n    ? isEquivalentArray(a, b)\n    : (\n        Array.isArray(b) === true\n          ? isEquivalentArray(b, a)\n          : a === b\n      )\n}\n\nfunction isSameRouteLocationParams (a, b) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n\n  for (const key in a) {\n    if (isSameRouteLocationParamsValue(a[ key ], b[ key ]) === false) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport const useRouterLinkProps = {\n  // router-link\n  to: [ String, Object ],\n  replace: Boolean,\n  exact: Boolean,\n  activeClass: {\n    type: String,\n    default: 'q-router-link--active'\n  },\n  exactActiveClass: {\n    type: String,\n    default: 'q-router-link--exact-active'\n  },\n\n  // regular <a> link\n  href: String,\n  target: String,\n\n  // state\n  disable: Boolean\n}\n\n// external props: type, tag\n\nexport default function ({ fallbackTag, useDisableForRouterLinkProps = true } = {}) {\n  const vm = getCurrentInstance()\n  const { props, proxy, emit } = vm\n\n  const hasRouter = vmHasRouter(vm)\n  const hasHrefLink = computed(() => props.disable !== true && props.href !== void 0)\n\n  // for perf reasons, we use minimum amount of runtime work\n  const hasRouterLinkProps = useDisableForRouterLinkProps === true\n    ? computed(() =>\n      hasRouter === true\n      && props.disable !== true\n      && hasHrefLink.value !== true\n      && props.to !== void 0 && props.to !== null && props.to !== ''\n    )\n    : computed(() =>\n      hasRouter === true\n      && hasHrefLink.value !== true\n      && props.to !== void 0 && props.to !== null && props.to !== ''\n    )\n\n  const resolvedLink = computed(() => (\n    hasRouterLinkProps.value === true\n      ? getLink(props.to)\n      : null\n  ))\n\n  const hasRouterLink = computed(() => resolvedLink.value !== null)\n  const hasLink = computed(() => hasHrefLink.value === true || hasRouterLink.value === true)\n\n  const linkTag = computed(() => (\n    props.type === 'a' || hasLink.value === true\n      ? 'a'\n      : (props.tag || fallbackTag || 'div')\n  ))\n\n  const linkAttrs = computed(() => (\n    hasHrefLink.value === true\n      ? {\n          href: props.href,\n          target: props.target\n        }\n      : (\n          hasRouterLink.value === true\n            ? {\n                href: resolvedLink.value.href,\n                target: props.target\n              }\n            : {}\n        )\n  ))\n\n  const linkActiveIndex = computed(() => {\n    if (hasRouterLink.value === false) {\n      return -1\n    }\n\n    const\n      { matched } = resolvedLink.value,\n      { length } = matched,\n      routeMatched = matched[ length - 1 ]\n\n    if (routeMatched === void 0) {\n      return -1\n    }\n\n    const currentMatched = proxy.$route.matched\n\n    if (currentMatched.length === 0) {\n      return -1\n    }\n\n    const index = currentMatched.findIndex(\n      isSameRouteRecord.bind(null, routeMatched)\n    )\n\n    if (index > -1) {\n      return index\n    }\n\n    // possible parent record\n    const parentRecordPath = getOriginalPath(matched[ length - 2 ])\n\n    return (\n      // we are dealing with nested routes\n      length > 1\n      // if the parent and matched route have the same path, this link is\n      // referring to the empty child. Or we currently are on a different\n      // child of the same parent\n      && getOriginalPath(routeMatched) === parentRecordPath\n      // avoid comparing the child with its parent\n      && currentMatched[ currentMatched.length - 1 ].path !== parentRecordPath\n        ? currentMatched.findIndex(\n          isSameRouteRecord.bind(null, matched[ length - 2 ])\n        )\n        : index\n    )\n  })\n\n  const linkIsActive = computed(() =>\n    hasRouterLink.value === true\n    && linkActiveIndex.value !== -1\n    && includesParams(proxy.$route.params, resolvedLink.value.params)\n  )\n\n  const linkIsExactActive = computed(() =>\n    linkIsActive.value === true\n      && linkActiveIndex.value === proxy.$route.matched.length - 1\n      && isSameRouteLocationParams(proxy.$route.params, resolvedLink.value.params)\n  )\n\n  const linkClass = computed(() => (\n    hasRouterLink.value === true\n      ? (\n          linkIsExactActive.value === true\n            ? ` ${ props.exactActiveClass } ${ props.activeClass }`\n            : (\n                props.exact === true\n                  ? ''\n                  : (linkIsActive.value === true ? ` ${ props.activeClass }` : '')\n              )\n        )\n      : ''\n  ))\n\n  function getLink (to) {\n    try { return proxy.$router.resolve(to) }\n    catch (_) {}\n\n    return null\n  }\n\n  /**\n   * @returns Promise<RouterError | false | undefined>\n   */\n  function navigateToRouterLink (\n    e,\n    { returnRouterError, to = props.to, replace = props.replace } = {}\n  ) {\n    if (props.disable === true) {\n      // ensure native navigation is prevented in all cases,\n      // like when useDisableForRouterLinkProps === false (QRouteTab)\n      e.preventDefault()\n      return Promise.resolve(false)\n    }\n\n    if (\n      // don't redirect with control keys;\n      // should match RouterLink from Vue Router\n      e.metaKey || e.altKey || e.ctrlKey || e.shiftKey\n\n      // don't redirect on right click\n      || (e.button !== void 0 && e.button !== 0)\n\n      // don't redirect if it should open in a new window\n      || props.target === '_blank'\n    ) {\n      return Promise.resolve(false)\n    }\n\n    // hinder the native navigation\n    e.preventDefault()\n\n    // then() can also return a \"soft\" router error (Vue Router behavior)\n    const promise = proxy.$router[ replace === true ? 'replace' : 'push' ](to)\n\n    return returnRouterError === true\n      ? promise\n      // else catching hard errors and also \"soft\" ones - then(err => ...)\n      : promise.then(() => {}).catch(() => {})\n  }\n\n  // warning! ensure that the component using it has 'click' included in its 'emits' definition prop\n  function navigateOnClick (e) {\n    if (hasRouterLink.value === true) {\n      const go = opts => navigateToRouterLink(e, opts)\n\n      emit('click', e, go)\n      e.defaultPrevented !== true && go()\n    }\n    else {\n      emit('click', e)\n    }\n  }\n\n  return {\n    hasRouterLink,\n    hasHrefLink,\n    hasLink,\n\n    linkTag,\n    resolvedLink,\n    linkIsActive,\n    linkIsExactActive,\n    linkClass,\n    linkAttrs,\n\n    getLink,\n    navigateToRouterLink,\n    navigateOnClick\n  }\n}\n",
      "start": 1703982901052,
      "end": 1703982901067,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703982901067,
      "end": 1703982901067,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { computed, getCurrentInstance } from \"vue\";\nimport { vmHasRouter } from \"../../utils/private/vm.js\";\nfunction getOriginalPath(record) {\n  return record ? record.aliasOf ? record.aliasOf.path : record.path : \"\";\n}\nfunction isSameRouteRecord(a, b) {\n  return (a.aliasOf || a) === (b.aliasOf || b);\n}\nfunction includesParams(outer, inner) {\n  for (const key in inner) {\n    const innerValue = inner[key], outerValue = outer[key];\n    if (typeof innerValue === \"string\") {\n      if (innerValue !== outerValue) {\n        return false;\n      }\n    } else if (Array.isArray(outerValue) === false || outerValue.length !== innerValue.length || innerValue.some((value, i) => value !== outerValue[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isEquivalentArray(a, b) {\n  return Array.isArray(b) === true ? a.length === b.length && a.every((value, i) => value === b[i]) : a.length === 1 && a[0] === b;\n}\nfunction isSameRouteLocationParamsValue(a, b) {\n  return Array.isArray(a) === true ? isEquivalentArray(a, b) : Array.isArray(b) === true ? isEquivalentArray(b, a) : a === b;\n}\nfunction isSameRouteLocationParams(a, b) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (isSameRouteLocationParamsValue(a[key], b[key]) === false) {\n      return false;\n    }\n  }\n  return true;\n}\nexport const useRouterLinkProps = {\n  // router-link\n  to: [String, Object],\n  replace: Boolean,\n  exact: Boolean,\n  activeClass: {\n    type: String,\n    default: \"q-router-link--active\"\n  },\n  exactActiveClass: {\n    type: String,\n    default: \"q-router-link--exact-active\"\n  },\n  // regular <a> link\n  href: String,\n  target: String,\n  // state\n  disable: Boolean\n};\nexport default function({ fallbackTag, useDisableForRouterLinkProps = true } = {}) {\n  const vm = getCurrentInstance();\n  const { props, proxy, emit } = vm;\n  const hasRouter = vmHasRouter(vm);\n  const hasHrefLink = computed(() => props.disable !== true && props.href !== void 0);\n  const hasRouterLinkProps = useDisableForRouterLinkProps === true ? computed(\n    () => hasRouter === true && props.disable !== true && hasHrefLink.value !== true && props.to !== void 0 && props.to !== null && props.to !== \"\"\n  ) : computed(\n    () => hasRouter === true && hasHrefLink.value !== true && props.to !== void 0 && props.to !== null && props.to !== \"\"\n  );\n  const resolvedLink = computed(() => hasRouterLinkProps.value === true ? getLink(props.to) : null);\n  const hasRouterLink = computed(() => resolvedLink.value !== null);\n  const hasLink = computed(() => hasHrefLink.value === true || hasRouterLink.value === true);\n  const linkTag = computed(() => props.type === \"a\" || hasLink.value === true ? \"a\" : props.tag || fallbackTag || \"div\");\n  const linkAttrs = computed(() => hasHrefLink.value === true ? {\n    href: props.href,\n    target: props.target\n  } : hasRouterLink.value === true ? {\n    href: resolvedLink.value.href,\n    target: props.target\n  } : {});\n  const linkActiveIndex = computed(() => {\n    if (hasRouterLink.value === false) {\n      return -1;\n    }\n    const { matched } = resolvedLink.value, { length } = matched, routeMatched = matched[length - 1];\n    if (routeMatched === void 0) {\n      return -1;\n    }\n    const currentMatched = proxy.$route.matched;\n    if (currentMatched.length === 0) {\n      return -1;\n    }\n    const index = currentMatched.findIndex(\n      isSameRouteRecord.bind(null, routeMatched)\n    );\n    if (index > -1) {\n      return index;\n    }\n    const parentRecordPath = getOriginalPath(matched[length - 2]);\n    return (\n      // we are dealing with nested routes\n      length > 1 && getOriginalPath(routeMatched) === parentRecordPath && currentMatched[currentMatched.length - 1].path !== parentRecordPath ? currentMatched.findIndex(\n        isSameRouteRecord.bind(null, matched[length - 2])\n      ) : index\n    );\n  });\n  const linkIsActive = computed(\n    () => hasRouterLink.value === true && linkActiveIndex.value !== -1 && includesParams(proxy.$route.params, resolvedLink.value.params)\n  );\n  const linkIsExactActive = computed(\n    () => linkIsActive.value === true && linkActiveIndex.value === proxy.$route.matched.length - 1 && isSameRouteLocationParams(proxy.$route.params, resolvedLink.value.params)\n  );\n  const linkClass = computed(() => hasRouterLink.value === true ? linkIsExactActive.value === true ? ` ${props.exactActiveClass} ${props.activeClass}` : props.exact === true ? \"\" : linkIsActive.value === true ? ` ${props.activeClass}` : \"\" : \"\");\n  function getLink(to) {\n    try {\n      return proxy.$router.resolve(to);\n    } catch (_) {\n    }\n    return null;\n  }\n  function navigateToRouterLink(e, { returnRouterError, to = props.to, replace = props.replace } = {}) {\n    if (props.disable === true) {\n      e.preventDefault();\n      return Promise.resolve(false);\n    }\n    if (\n      // don't redirect with control keys;\n      // should match RouterLink from Vue Router\n      e.metaKey || e.altKey || e.ctrlKey || e.shiftKey || e.button !== void 0 && e.button !== 0 || props.target === \"_blank\"\n    ) {\n      return Promise.resolve(false);\n    }\n    e.preventDefault();\n    const promise = proxy.$router[replace === true ? \"replace\" : \"push\"](to);\n    return returnRouterError === true ? promise : promise.then(() => {\n    }).catch(() => {\n    });\n  }\n  function navigateOnClick(e) {\n    if (hasRouterLink.value === true) {\n      const go = (opts) => navigateToRouterLink(e, opts);\n      emit(\"click\", e, go);\n      e.defaultPrevented !== true && go();\n    } else {\n      emit(\"click\", e);\n    }\n  }\n  return {\n    hasRouterLink,\n    hasHrefLink,\n    hasLink,\n    linkTag,\n    resolvedLink,\n    linkIsActive,\n    linkIsExactActive,\n    linkClass,\n    linkAttrs,\n    getLink,\n    navigateToRouterLink,\n    navigateOnClick\n  };\n}\n",
      "start": 1703982901067,
      "end": 1703982901072,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/home/vivax/coding/vivax.dev/node_modules/quasar/src/composables/private/use-router-link.js\"],\n  \"sourcesContent\": [\"/*\\n * Inspired by RouterLink from Vue Router\\n *  --> API should match!\\n */\\n\\nimport { computed, getCurrentInstance } from 'vue'\\n\\nimport { vmHasRouter } from '../../utils/private/vm.js'\\n\\n// Get the original path value of a record by following its aliasOf\\nfunction getOriginalPath (record) {\\n  return record\\n    ? (\\n        record.aliasOf\\n          ? record.aliasOf.path\\n          : record.path\\n      ) : ''\\n}\\n\\nfunction isSameRouteRecord (a, b) {\\n  // since the original record has an undefined value for aliasOf\\n  // but all aliases point to the original record, this will always compare\\n  // the original record\\n  return (a.aliasOf || a) === (b.aliasOf || b)\\n}\\n\\nfunction includesParams (outer, inner) {\\n  for (const key in inner) {\\n    const\\n      innerValue = inner[ key ],\\n      outerValue = outer[ key ]\\n\\n    if (typeof innerValue === 'string') {\\n      if (innerValue !== outerValue) {\\n        return false\\n      }\\n    }\\n    else if (\\n      Array.isArray(outerValue) === false\\n      || outerValue.length !== innerValue.length\\n      || innerValue.some((value, i) => value !== outerValue[ i ])\\n    ) {\\n      return false\\n    }\\n  }\\n\\n  return true\\n}\\n\\nfunction isEquivalentArray (a, b) {\\n  return Array.isArray(b) === true\\n    ? a.length === b.length && a.every((value, i) => value === b[ i ])\\n    : a.length === 1 && a[ 0 ] === b\\n}\\n\\nfunction isSameRouteLocationParamsValue (a, b) {\\n  return Array.isArray(a) === true\\n    ? isEquivalentArray(a, b)\\n    : (\\n        Array.isArray(b) === true\\n          ? isEquivalentArray(b, a)\\n          : a === b\\n      )\\n}\\n\\nfunction isSameRouteLocationParams (a, b) {\\n  if (Object.keys(a).length !== Object.keys(b).length) {\\n    return false\\n  }\\n\\n  for (const key in a) {\\n    if (isSameRouteLocationParamsValue(a[ key ], b[ key ]) === false) {\\n      return false\\n    }\\n  }\\n\\n  return true\\n}\\n\\nexport const useRouterLinkProps = {\\n  // router-link\\n  to: [ String, Object ],\\n  replace: Boolean,\\n  exact: Boolean,\\n  activeClass: {\\n    type: String,\\n    default: 'q-router-link--active'\\n  },\\n  exactActiveClass: {\\n    type: String,\\n    default: 'q-router-link--exact-active'\\n  },\\n\\n  // regular <a> link\\n  href: String,\\n  target: String,\\n\\n  // state\\n  disable: Boolean\\n}\\n\\n// external props: type, tag\\n\\nexport default function ({ fallbackTag, useDisableForRouterLinkProps = true } = {}) {\\n  const vm = getCurrentInstance()\\n  const { props, proxy, emit } = vm\\n\\n  const hasRouter = vmHasRouter(vm)\\n  const hasHrefLink = computed(() => props.disable !== true && props.href !== void 0)\\n\\n  // for perf reasons, we use minimum amount of runtime work\\n  const hasRouterLinkProps = useDisableForRouterLinkProps === true\\n    ? computed(() =>\\n      hasRouter === true\\n      && props.disable !== true\\n      && hasHrefLink.value !== true\\n      && props.to !== void 0 && props.to !== null && props.to !== ''\\n    )\\n    : computed(() =>\\n      hasRouter === true\\n      && hasHrefLink.value !== true\\n      && props.to !== void 0 && props.to !== null && props.to !== ''\\n    )\\n\\n  const resolvedLink = computed(() => (\\n    hasRouterLinkProps.value === true\\n      ? getLink(props.to)\\n      : null\\n  ))\\n\\n  const hasRouterLink = computed(() => resolvedLink.value !== null)\\n  const hasLink = computed(() => hasHrefLink.value === true || hasRouterLink.value === true)\\n\\n  const linkTag = computed(() => (\\n    props.type === 'a' || hasLink.value === true\\n      ? 'a'\\n      : (props.tag || fallbackTag || 'div')\\n  ))\\n\\n  const linkAttrs = computed(() => (\\n    hasHrefLink.value === true\\n      ? {\\n          href: props.href,\\n          target: props.target\\n        }\\n      : (\\n          hasRouterLink.value === true\\n            ? {\\n                href: resolvedLink.value.href,\\n                target: props.target\\n              }\\n            : {}\\n        )\\n  ))\\n\\n  const linkActiveIndex = computed(() => {\\n    if (hasRouterLink.value === false) {\\n      return -1\\n    }\\n\\n    const\\n      { matched } = resolvedLink.value,\\n      { length } = matched,\\n      routeMatched = matched[ length - 1 ]\\n\\n    if (routeMatched === void 0) {\\n      return -1\\n    }\\n\\n    const currentMatched = proxy.$route.matched\\n\\n    if (currentMatched.length === 0) {\\n      return -1\\n    }\\n\\n    const index = currentMatched.findIndex(\\n      isSameRouteRecord.bind(null, routeMatched)\\n    )\\n\\n    if (index > -1) {\\n      return index\\n    }\\n\\n    // possible parent record\\n    const parentRecordPath = getOriginalPath(matched[ length - 2 ])\\n\\n    return (\\n      // we are dealing with nested routes\\n      length > 1\\n      // if the parent and matched route have the same path, this link is\\n      // referring to the empty child. Or we currently are on a different\\n      // child of the same parent\\n      && getOriginalPath(routeMatched) === parentRecordPath\\n      // avoid comparing the child with its parent\\n      && currentMatched[ currentMatched.length - 1 ].path !== parentRecordPath\\n        ? currentMatched.findIndex(\\n          isSameRouteRecord.bind(null, matched[ length - 2 ])\\n        )\\n        : index\\n    )\\n  })\\n\\n  const linkIsActive = computed(() =>\\n    hasRouterLink.value === true\\n    && linkActiveIndex.value !== -1\\n    && includesParams(proxy.$route.params, resolvedLink.value.params)\\n  )\\n\\n  const linkIsExactActive = computed(() =>\\n    linkIsActive.value === true\\n      && linkActiveIndex.value === proxy.$route.matched.length - 1\\n      && isSameRouteLocationParams(proxy.$route.params, resolvedLink.value.params)\\n  )\\n\\n  const linkClass = computed(() => (\\n    hasRouterLink.value === true\\n      ? (\\n          linkIsExactActive.value === true\\n            ? ` ${ props.exactActiveClass } ${ props.activeClass }`\\n            : (\\n                props.exact === true\\n                  ? ''\\n                  : (linkIsActive.value === true ? ` ${ props.activeClass }` : '')\\n              )\\n        )\\n      : ''\\n  ))\\n\\n  function getLink (to) {\\n    try { return proxy.$router.resolve(to) }\\n    catch (_) {}\\n\\n    return null\\n  }\\n\\n  /**\\n   * @returns Promise<RouterError | false | undefined>\\n   */\\n  function navigateToRouterLink (\\n    e,\\n    { returnRouterError, to = props.to, replace = props.replace } = {}\\n  ) {\\n    if (props.disable === true) {\\n      // ensure native navigation is prevented in all cases,\\n      // like when useDisableForRouterLinkProps === false (QRouteTab)\\n      e.preventDefault()\\n      return Promise.resolve(false)\\n    }\\n\\n    if (\\n      // don't redirect with control keys;\\n      // should match RouterLink from Vue Router\\n      e.metaKey || e.altKey || e.ctrlKey || e.shiftKey\\n\\n      // don't redirect on right click\\n      || (e.button !== void 0 && e.button !== 0)\\n\\n      // don't redirect if it should open in a new window\\n      || props.target === '_blank'\\n    ) {\\n      return Promise.resolve(false)\\n    }\\n\\n    // hinder the native navigation\\n    e.preventDefault()\\n\\n    // then() can also return a \\\"soft\\\" router error (Vue Router behavior)\\n    const promise = proxy.$router[ replace === true ? 'replace' : 'push' ](to)\\n\\n    return returnRouterError === true\\n      ? promise\\n      // else catching hard errors and also \\\"soft\\\" ones - then(err => ...)\\n      : promise.then(() => {}).catch(() => {})\\n  }\\n\\n  // warning! ensure that the component using it has 'click' included in its 'emits' definition prop\\n  function navigateOnClick (e) {\\n    if (hasRouterLink.value === true) {\\n      const go = opts => navigateToRouterLink(e, opts)\\n\\n      emit('click', e, go)\\n      e.defaultPrevented !== true && go()\\n    }\\n    else {\\n      emit('click', e)\\n    }\\n  }\\n\\n  return {\\n    hasRouterLink,\\n    hasHrefLink,\\n    hasLink,\\n\\n    linkTag,\\n    resolvedLink,\\n    linkIsActive,\\n    linkIsExactActive,\\n    linkClass,\\n    linkAttrs,\\n\\n    getLink,\\n    navigateToRouterLink,\\n    navigateOnClick\\n  }\\n}\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1703982901072,
      "end": 1703982901072,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703982901072,
      "end": 1703982901072,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703982901072,
      "end": 1703982901072,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703982901072,
      "end": 1703982901072,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703982901072,
      "end": 1703982901073,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703982901073,
      "end": 1703982901073,
      "order": "normal"
    }
  ]
}
